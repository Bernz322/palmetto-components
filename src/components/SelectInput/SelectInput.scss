/* The following styles required the :global tag since they need to be applied to
react-select elements for which we do not own the markup */
:global {
  .selectInputWrapper {
    .reactSelect {
      .reactSelect__control {
        padding: var(--form-control-select-padding);
        border-radius: var(--form-control-size-md-border-radius);
        box-shadow: 0px 3px 0px rgba(0, 0, 0, 0.05);
  
        .reactSelect__placeholder {
          color: var(--form-control-placeholder-color);
        }
  
        .reactSelect__clear-indicator {
          padding: 7px 7px;
        }
  
        .reactSelect__indicator-separator {
          display: none;
        }
  
        .reactSelect__dropdown-indicator {
          padding: 0;
          padding-right: 2px;
          color: var(--form-control-select-chevron-color);
  
          svg {
            width: var(--form-control-select-chevron-size);
            height: var(--form-control-select-chevron-size);
          }
        }
  
        &.reactSelect__control--is-focused {
          border-color: var(--form-control-focus-border-color);
          box-shadow: none;
        }
  
        &.reactSelect__control--is-disabled {
          .reactSelect__dropdown-indicator {
            color: var(--form-control-placeholder-color);
          }
        }
      }
  
      &:hover {
        .reactSelect__dropdown-indicator {
          color: var(--form-control-focus-border-color);
        }
      }
  
      &.error {
        .reactSelect__control {
          background-color: var(--form-control-error-background-color);
          border-color: var(--form-control-error-font-color);
  
          &.reactSelect__control--is-focused {
            background-color: var(--form-control-background-color);
            border-color: var(--form-control-border-color);
            outline: none;
          }
        }
      }
    }
  
    &.disabled {
      .reactSelect__control--is-disabled {
        background-color: var(--form-control-disabled-background-color);
      }
    }
  }
}
